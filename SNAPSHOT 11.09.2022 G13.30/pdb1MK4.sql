DECLARE
    LOCAL_TITLE RENTAL.TITLE_RECORD;
    DESCRIPTION_VARCHAR VARCHAR2(4000) := 'Amers is a collection of poetry 
    by French writer Saint-John Perse, published in 1957. Perse won 
    the Nobel Prize in Literature three years later. The title means 
    "sea marks" (points used to navigate at sea, both manmade and 
    natural); it possibly puns on the French amer(s), "bitter", 
    perhaps meaning "briny" here, and has echoes of mer, "sea".';
    DESCRIPTION_BLOB BLOB;
    RETURNED_ID NUMBER(10);
BEGIN
    DESCRIPTION_BLOB := utl_raw.cast_to_raw(DESCRIPTION_VARCHAR);
    LOCAL_TITLE := RENTAL.TITLE_RECORD('Amers', DATE '1957-01-01', 13, DESCRIPTION_BLOB);
    RETURNED_ID := RENTAL.ADD_TITLE(LOCAL_TITLE);
    DBMS_OUTPUT.PUT_LINE(RETURNED_ID);
END;
/

SELECT * FROM TITLES;

DECLARE
    LOCAL_TITLE RENTAL.TITLE_RECORD;
    DESCRIPTION_VARCHAR VARCHAR2(4000) := 'BLA BLA BLA';
    DESCRIPTION_BLOB BLOB;
    RETURNED_ID NUMBER(10);
BEGIN
    DESCRIPTION_BLOB := utl_raw.cast_to_raw(DESCRIPTION_VARCHAR);
    LOCAL_TITLE := RENTAL.TITLE_RECORD('DLA DZIECI', DATE '1957-01-01', 6, DESCRIPTION_BLOB);
    RETURNED_ID := RENTAL.ADD_TITLE(LOCAL_TITLE);
    DBMS_OUTPUT.PUT_LINE(RETURNED_ID);
END;
/

SELECT * FROM AUTHORS;
SELECT * FROM TITLES;

DECLARE
    LOCAL_RELATION_AUTHORS RENTAL.ID_ARRAY;
    LOCAL_RELATION_TITLE_ID NUMBER := 1;
    RETURNED_AMOUNT_OF_RELATIONS NUMBER;
BEGIN
    LOCAL_RELATION_AUTHORS := RENTAL.ID_ARRAY();
    LOCAL_RELATION_AUTHORS.EXTEND(2);
    LOCAL_RELATION_AUTHORS(1) := 3;
    LOCAL_RELATION_AUTHORS(2) := 41;
    
    RETURNED_AMOUNT_OF_RELATIONS := 
        RENTAL.AUTHORS_TITLES_RELATION(LOCAL_RELATION_AUTHORS, LOCAL_RELATION_TITLE_ID);
        
    DBMS_OUTPUT.PUT_LINE(RETURNED_AMOUNT_OF_RELATIONS);
END;
/

SELECT * FROM AUTHORS_TITLES;
TRUNCATE TABLE AUTHORS_TITLES;
SET SERVEROUTPUT ON;
DELETE FROM AUTHORS_TITLES WHERE AUTHOR_ID = 41 AND TITLE_ID = 1;

BEGIN
    FOR I IN 1..RENTAL.LOCATIONS_CORRIDOR_NUMBER LOOP
        FOR J IN 1..RENTAL.LOCATIONS_RACK_NUMBER LOOP
            FOR K IN 1..RENTAL.LOCATIONS_SHELF_NUMBER LOOP
                INSERT INTO LOCATIONS (CORRIDOR, RACK, SHELF) VALUES (I, J, K);
            END LOOP;
        END LOOP;
    END LOOP;
END;
/

SELECT * FROM LOCATIONS;
SELECT * FROM LOCATIONS ORDER BY LOCATION_ID;