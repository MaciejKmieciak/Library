CREATE OR REPLACE PACKAGE BODY RENTAL AS
    
    FUNCTION SEARCH_AUTHOR (AUTHOR_TO_SEARCH AUTHOR_RECORD) 
        RETURN ID_ARRAY
    AS
        TO_RETURN ID_ARRAY;
    BEGIN
        SELECT AUTHOR_ID BULK COLLECT INTO TO_RETURN FROM AUTHORS
        WHERE FIRST_NAME = AUTHOR_TO_SEARCH.FIRST_NAME
          AND LAST_NAME = AUTHOR_TO_SEARCH.LAST_NAME;
        RETURN TO_RETURN;
    END;
    
    FUNCTION ADD_AUTHOR(AUTHOR_TO_ADD AUTHOR_RECORD) 
        RETURN NUMBER
    AS
        TO_RETURN NUMBER(10);
    BEGIN
        INSERT INTO AUTHORS 
        (FIRST_NAME, LAST_NAME, BIRTH_DATE, DEATH_DATE) VALUES
        (AUTHOR_TO_ADD.FIRST_NAME, AUTHOR_TO_ADD.LAST_NAME,
        AUTHOR_TO_ADD.BIRTH_DATE, AUTHOR_TO_ADD.DEATH_DATE)
        RETURNING AUTHOR_ID INTO TO_RETURN;
        
        RETURN TO_RETURN;
    END;
    
    FUNCTION PICK_AUTHOR(PICKED_AUTHOR_ID NUMBER, AUTHOR_TO_PICK AUTHOR_RECORD) 
        RETURN NUMBER
    AS
        TO_RETURN NUMBER(10);
    BEGIN
        IF PICKED_AUTHOR_ID IS NULL THEN
            TO_RETURN := ADD_AUTHOR(AUTHOR_TO_PICK);
        ELSE
            TO_RETURN := PICKED_AUTHOR_ID;
        END IF;
        
        RETURN TO_RETURN;
    END;
    
    FUNCTION ADD_TITLE(TITLE_TO_ADD TITLE_RECORD) 
        RETURN NUMBER
    AS
        TO_RETURN NUMBER(10);
    BEGIN
        INSERT INTO TITLES
        (TITLE, PUB_DATE, AGE_LIMIT, TITLE_DESCRIPTION) VALUES
        (TITLE_TO_ADD.TITLE, TITLE_TO_ADD.PUB_DATE,
        TITLE_TO_ADD.AGE_LIMIT, TITLE_TO_ADD.TITLE_DESCRIPTION)
        RETURNING TITLE_ID INTO TO_RETURN;
        
        RETURN TO_RETURN;
    END;
    
    FUNCTION PICK_TITLE(PICKED_TITLE_ID NUMBER, TITLE_TO_PICK TITLE_RECORD) 
        RETURN NUMBER
    AS
        TO_RETURN NUMBER(10);
    BEGIN
        IF PICKED_TITLE_ID IS NULL THEN
            TO_RETURN := ADD_TITLE(TITLE_TO_PICK);
        ELSE
            TO_RETURN := PICKED_TITLE_ID;
        END IF;
    END;
    
    FUNCTION AUTHORS_TITLES_RELATION(RELATION_TITLE_ID NUMBER, RELATION_AUTHORS ID_ARRAY) 
        RETURN NUMBER
    AS
        RELATIONS_CREATED NUMBER;
    BEGIN
        RELATIONS_CREATED := RELATION_AUTHORS.LAST;
        FOR I IN 1..RELATIONS_CREATED LOOP
            INSERT INTO AUTHORS_TITLES (AUTHOR_ID, TITLE_ID) VALUES
            (RELATION_AUTHORS(I), RELATION_TITLE_ID);
        END LOOP;
        
        RETURN RELATIONS_CREATED;
    END;
        
END RENTAL;
/

